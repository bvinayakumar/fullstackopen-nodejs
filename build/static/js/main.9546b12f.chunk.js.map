{"version":3,"sources":["components/Person.js","components/Persons.js","components/PersonForm.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","person","onDelete","name","number","onClick","Persons","persons","map","PersonForm","onNameChange","onNumberChange","addPerson","onSubmit","value","onChange","type","Filter","baseUrl","operations","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Notification","message","isError","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setNameFilter","notificationMessage","setNotificationMessage","useEffect","personService","personsToShow","length","filter","p","toLowerCase","indexOf","trim","event","target","preventDefault","foundPerson","find","changedPerson","returnedPerson","setTimeout","catch","error","personObject","concat","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9546b12f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, onDelete }) => (\r\n  <li>\r\n    {person.name} {person.number} <button onClick={onDelete(person)}>delete</button>\r\n  </li>\r\n)\r\n\r\nexport default Person\r\n","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, onDelete }) => (\r\n  <ul>\r\n    {persons.map(person => (\r\n      <Person key={person.name} person={person} onDelete={onDelete} />\r\n    ))}\r\n  </ul>\r\n)\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst PersonForm = ({ name, number, onNameChange, onNumberChange, addPerson }) => (\r\n    <form onSubmit={addPerson}>\r\n    <div>\r\n      name: <input value={name} onChange={onNameChange} />\r\n      <div>\r\n        number: <input value={number} onChange={onNumberChange} />\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button type='submit'>add</button>\r\n    </div>\r\n  </form>\r\n\r\n)\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({ name, onChange }) => (\r\n    <div>\r\n        filter shown with:\r\n        <input value={name} onChange={onChange} />\r\n    </div>\r\n)\r\n\r\nexport default Filter\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request\r\n}\r\n\r\nconst operations = { getAll, create, update, remove }\r\n\r\nexport default operations\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message, isError }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  if (isError) {\r\n    return <div className='error'>{message}</div>\r\n  } else {\r\n    return <div className='notification'>{message}</div>\r\n  }\r\n\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [nameFilter, setNameFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then(persons => {\n      setPersons(persons)\n    })\n  }, [])\n\n  const addPerson = event => {\n    event.preventDefault()\n\n    const foundPerson = persons.find(p => p.name === newName)\n    if (foundPerson) {\n      const changedPerson = { ...foundPerson, name: newName, number: newNumber }\n      const id = foundPerson.id\n      personService.update(id, changedPerson).then(returnedPerson => {\n        setNotificationMessage(\n          `Number changed for '${returnedPerson.name}'`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n\n        setPersons(persons.map(person => (person.id !== id ? person : returnedPerson)))\n        setNewName('')\n        setNewNumber('')\n      }).catch(error => {\n        setNotificationMessage(\n          `Information of '${changedPerson.name}' has already been removed from server`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n        setPersons(persons.filter(person => person.id !== id))\n        setNewName('')\n        setNewNumber('')\n      })\n    } else if (newName && newNumber) {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      personService.create(personObject).then(returnedPerson => {\n        setNotificationMessage(\n          `Added '${returnedPerson.name}'`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n    }\n  }\n\n  const handleNameChange = event => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNameFilterChange = event => {\n    setNameFilter(event.target.value)\n  }\n\n  const handleDelete = person => () => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n      .remove(person.id)\n      .then(() => setPersons(persons.filter(p => p.id !== person.id)))\n    }\n  }\n\n  let personsToShow = nameFilter.length\n    ? persons.filter(\n        p => p.name.toLowerCase().indexOf(nameFilter.trim().toLowerCase()) > -1\n      )\n    : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <Filter name={nameFilter} onChange={handleNameFilterChange} />\n\n      <h2>Add a new</h2>\n      <PersonForm\n        name={newName}\n        number={newNumber}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n        addPerson={addPerson}\n      />\n\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} onDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}